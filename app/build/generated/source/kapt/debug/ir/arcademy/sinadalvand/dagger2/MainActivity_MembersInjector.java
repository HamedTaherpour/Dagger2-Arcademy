// Generated by Dagger (https://dagger.dev).
package ir.arcademy.sinadalvand.dagger2;

import dagger.MembersInjector;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<SafePref> autoSafePrefAndAutoSafePref2Provider;

  private final Provider<Zcript> zcriptProvider;

  private final Provider<Map<String, Zsecure>> zsecuresProvider;

  public MainActivity_MembersInjector(Provider<SafePref> autoSafePrefAndAutoSafePref2Provider,
      Provider<Zcript> zcriptProvider, Provider<Map<String, Zsecure>> zsecuresProvider) {
    this.autoSafePrefAndAutoSafePref2Provider = autoSafePrefAndAutoSafePref2Provider;
    this.zcriptProvider = zcriptProvider;
    this.zsecuresProvider = zsecuresProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<SafePref> autoSafePrefAndAutoSafePref2Provider, Provider<Zcript> zcriptProvider,
      Provider<Map<String, Zsecure>> zsecuresProvider) {
    return new MainActivity_MembersInjector(autoSafePrefAndAutoSafePref2Provider, zcriptProvider, zsecuresProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    injectAutoSafePref(instance, autoSafePrefAndAutoSafePref2Provider.get());
    injectAutoSafePref2(instance, autoSafePrefAndAutoSafePref2Provider.get());
    injectZcript(instance, zcriptProvider.get());
    injectZsecures(instance, zsecuresProvider.get());
  }

  public static void injectAutoSafePref(MainActivity instance, SafePref autoSafePref) {
    instance.autoSafePref = autoSafePref;
  }

  public static void injectAutoSafePref2(MainActivity instance, SafePref autoSafePref2) {
    instance.autoSafePref2 = autoSafePref2;
  }

  public static void injectZcript(MainActivity instance, Zcript zcript) {
    instance.zcript = zcript;
  }

  public static void injectZsecures(MainActivity instance, Map<String, Zsecure> zsecures) {
    instance.zsecures = zsecures;
  }
}
