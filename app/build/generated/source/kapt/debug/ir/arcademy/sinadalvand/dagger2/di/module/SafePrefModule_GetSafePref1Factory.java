// Generated by Dagger (https://dagger.dev).
package ir.arcademy.sinadalvand.dagger2.di.module;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ir.arcademy.sinadalvand.dagger2.SafePref;
import ir.arcademy.sinadalvand.dagger2.Zcript;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SafePrefModule_GetSafePref1Factory implements Factory<SafePref> {
  private final SafePrefModule module;

  private final Provider<Context> contextProvider;

  private final Provider<Zcript> zcriptProvider;

  public SafePrefModule_GetSafePref1Factory(SafePrefModule module,
      Provider<Context> contextProvider, Provider<Zcript> zcriptProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.zcriptProvider = zcriptProvider;
  }

  @Override
  public SafePref get() {
    return getSafePref1(module, contextProvider.get(), zcriptProvider.get());
  }

  public static SafePrefModule_GetSafePref1Factory create(SafePrefModule module,
      Provider<Context> contextProvider, Provider<Zcript> zcriptProvider) {
    return new SafePrefModule_GetSafePref1Factory(module, contextProvider, zcriptProvider);
  }

  public static SafePref getSafePref1(SafePrefModule instance, Context context, Zcript zcript) {
    return Preconditions.checkNotNull(instance.getSafePref1(context, zcript), "Cannot return null from a non-@Nullable @Provides method");
  }
}
