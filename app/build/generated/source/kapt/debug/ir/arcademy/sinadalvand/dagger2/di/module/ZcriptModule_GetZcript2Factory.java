// Generated by Dagger (https://dagger.dev).
package ir.arcademy.sinadalvand.dagger2.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ir.arcademy.sinadalvand.dagger2.Zcript;
import ir.arcademy.sinadalvand.dagger2.Zsecure;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ZcriptModule_GetZcript2Factory implements Factory<Zcript> {
  private final ZcriptModule module;

  private final Provider<Zsecure> zsecureProvider;

  public ZcriptModule_GetZcript2Factory(ZcriptModule module, Provider<Zsecure> zsecureProvider) {
    this.module = module;
    this.zsecureProvider = zsecureProvider;
  }

  @Override
  public Zcript get() {
    return getZcript2(module, zsecureProvider.get());
  }

  public static ZcriptModule_GetZcript2Factory create(ZcriptModule module,
      Provider<Zsecure> zsecureProvider) {
    return new ZcriptModule_GetZcript2Factory(module, zsecureProvider);
  }

  public static Zcript getZcript2(ZcriptModule instance, Zsecure zsecure) {
    return Preconditions.checkNotNull(instance.getZcript2(zsecure), "Cannot return null from a non-@Nullable @Provides method");
  }
}
