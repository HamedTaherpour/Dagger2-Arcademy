// Generated by Dagger (https://dagger.dev).
package ir.arcademy.sinadalvand.dagger2;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SafePref_Factory implements Factory<SafePref> {
  private final Provider<Context> contextProvider;

  private final Provider<Zcript> zcriptProvider;

  public SafePref_Factory(Provider<Context> contextProvider, Provider<Zcript> zcriptProvider) {
    this.contextProvider = contextProvider;
    this.zcriptProvider = zcriptProvider;
  }

  @Override
  public SafePref get() {
    return new SafePref(contextProvider.get(), zcriptProvider.get());
  }

  public static SafePref_Factory create(Provider<Context> contextProvider,
      Provider<Zcript> zcriptProvider) {
    return new SafePref_Factory(contextProvider, zcriptProvider);
  }

  public static SafePref newInstance(Context context, Zcript zcript) {
    return new SafePref(context, zcript);
  }
}
